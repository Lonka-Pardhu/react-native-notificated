"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[322],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=o.createContext({}),c=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=c(t.components);return o.createElement(l.Provider,{value:e},t.children)},u="mdxType",f={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),u=c(n),d=i,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||a;return n?o.createElement(m,r(r({ref:e},p),{},{components:n})):o.createElement(m,r({ref:e},p))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[u]="string"==typeof t?t:i,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},725:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return c}});var o=n(3117),i=(n(7294),n(3905));const a={sidebar_position:8},r="\ud83d\udd14 Notifcation In Modal Example",s={unversionedId:"intro/examples/notification-in-modal-example",id:"intro/examples/notification-in-modal-example",title:"\ud83d\udd14 Notifcation In Modal Example",description:"Code has been already described step by step in the DEFAULT EXAMPLES section, so I think there is no use to do it here again.",source:"@site/docs/intro/examples/notification-in-modal-example.md",sourceDirName:"intro/examples",slug:"/intro/examples/notification-in-modal-example",permalink:"/react-native-notificated/docs/intro/examples/notification-in-modal-example",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"intro",previous:{title:"\ud83d\udced Push notifications example",permalink:"/react-native-notificated/docs/intro/examples/push-notifications-example"}},l={},c=[{value:"Code",id:"code",level:2},{value:"Conclusion",id:"conclusion",level:2}],p={toc:c};function u(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-notifcation-in-modal-example"},"\ud83d\udd14 Notifcation In Modal Example"),(0,i.kt)("br",null),(0,i.kt)("p",null,"Code has been already described step by step in the ",(0,i.kt)("a",{parentName:"p",href:"/react-native-notificated/docs/intro/examples/default-examples"},"DEFAULT EXAMPLES")," section, so I think there is no use to do it here again."),(0,i.kt)("p",null,"In fact the only differences between Default Examples and Notification In Modal Example are:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"We are using an additional ",(0,i.kt)("strong",{parentName:"li"},"ModalNotificationsProvider"),"."),(0,i.kt)("li",{parentName:"ol"},"We are passing ",(0,i.kt)("strong",{parentName:"li"},"isModalNotification")," to notify function."),(0,i.kt)("li",{parentName:"ol"},"We can use ",(0,i.kt)("strong",{parentName:"li"},"notificationTopPosition")," as ",(0,i.kt)("strong",{parentName:"li"},"ModalNotificationsProvider")," props to change position of our notification.")),(0,i.kt)("p",null,"Let's take a look at the code:"),(0,i.kt)("h2",{id:"code"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { useState } from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport Modal from 'react-native-modal'\nimport { createNotifications } from 'react-native-notificated'\nimport { SuccessButton } from '../components/basicExamples/SuccessButton'\nimport { ErrorButton } from '../components/basicExamples/ErrorButton'\nimport { WarningButton } from '../components/basicExamples/WarningButton'\nimport { InfoButton } from '../components/basicExamples/InfoButton'\nimport { styles } from './styles'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\n\nconst { useNotifications, NotificationsProvider, ModalNotificationsProvider } =\n  createNotifications()\n\nexport const NotificationInModalExample = () => {\n  const { notify } = useNotifications()\n  const [isModalOpened, setIsModalOpened] = useState(false)\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n\n      <TouchableOpacity onPress={() => setIsModalOpened(true)} style={styles.modalButton}>\n        <Text style={styles.modalButtonsText}>Open Modal</Text>\n      </TouchableOpacity>\n\n      <Modal\n        isVisible={isModalOpened}\n        onBackdropPress={() => setIsModalOpened(false)}\n        style={styles.modal}>\n        <ModalNotificationsProvider notificationTopPosition={0} />\n\n        <TouchableOpacity onPress={() => setIsModalOpened(false)} style={styles.modalButton}>\n          <Text style={styles.modalButtonsText}>Close Modal</Text>\n        </TouchableOpacity>\n\n        <SuccessButton\n          onPress={() =>\n            notify('success', {\n              params: {\n                description: 'This is where the toast text goes',\n                title: 'Success',\n                isModalNotification: true,\n              },\n            }).id\n          }\n        />\n        <ErrorButton\n          onPress={() =>\n            notify('error', {\n              params: {\n                description: 'This is where the toast text goes. ',\n                title: 'Error',\n                isModalNotification: true,\n              },\n              config: {\n                duration: 2000,\n              },\n            })\n          }\n        />\n\n        <WarningButton\n          onPress={() =>\n            notify('warning', {\n              params: {\n                description: 'This is where the toast text goes',\n                title: 'Warning',\n                isModalNotification: true,\n              },\n            })\n          }\n        />\n\n        <InfoButton\n          onPress={() =>\n            notify('info', {\n              params: {\n                description: 'This is where the toast text goes.',\n                title: 'Info',\n                isModalNotification: true,\n              },\n              config: {\n                notificationPosition: 'bottom',\n              },\n            })\n          }\n        />\n      </Modal>\n    </SafeAreaView>\n  )\n}\n")),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"To display notifications over modal we have to use additional ModalNotificationsProvider. But because of how the library is built, it will result with multiple notifications being displayed (each for every NotificationsProvider or ModalNotificationsProvider). To address this problem, we need to pass additional property to notify function params: ",(0,i.kt)("strong",{parentName:"p"},"isModalNotification:true"),"."),(0,i.kt)("p",null,"You shouldn't pass isModalNotification to notify function if you are not using it with ModalNotificationsProvider as it won't work at all."),(0,i.kt)("p",null,"We also have props called ",(0,i.kt)("strong",{parentName:"p"},"notificationTopPosition"),". In other examples we are using ",(0,i.kt)("strong",{parentName:"p"},"notificationPosition")," but because styling in modal isn't so simple and we don't know what your modal looks like you have to pass notificationTopPosition by yourself. Keep in mind that notificationTopPosition={0} will render notification on top of your modal."),(0,i.kt)("p",null,"This is probably a temporary solution until we find something that will work globaly and out of the box."))}u.isMDXComponent=!0}}]);