"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[927],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4902:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var a=n(3117),r=(n(7294),n(3905));const i={sidebar_position:2,title:"Types"},o="\ud83e\ude9b Types",l={unversionedId:"api/types",id:"api/types",title:"Types",description:"Here are all the types referenced in the API section.",source:"@site/docs/api/types.md",sourceDirName:"api",slug:"/api/types",permalink:"/react-native-notificated/docs/api/types",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Types"},sidebar:"api",previous:{title:"API",permalink:"/react-native-notificated/docs/api/apiReference"}},s={},c=[{value:"<code>CustomAnimationConfig</code>",id:"customanimationconfig",level:3},{value:"<code>CustomVariants</code>",id:"customvariants",level:3},{value:"<code>GestureConfig</code>",id:"gestureconfig",level:3},{value:"<code>StyleProps</code>",id:"styleprops",level:3},{value:"<code>NotificationConfigParams</code>",id:"notificationconfigparams",level:3},{value:"<code>NotificationParams</code>",id:"notificationparams",level:3},{value:"<code>NotificationPosition</code>",id:"notificationposition",level:3},{value:"<code>ModalNotificationProvider</code>",id:"modalnotificationprovider",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-types"},"\ud83e\ude9b Types"),(0,r.kt)("p",null,"Here are all the types referenced in the API section."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"customanimationconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"CustomAnimationConfig")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'animationConfigIn: {\n    type: "timing" | "spring",\n    config: WithSpringConfig | WithTimingConfig // -> Reanimated type declarations\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'animationConfigOut?: {\n    type: "timing" | "spring",\n    config: WithSpringConfig | WithTimingConfig // -> Reanimated type declarations\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"transitionInStyles: (progress: SharedValue<number>) => AnimatedStylesType // -> must be a worklet / Reanimated type declarations\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"transitionOutStyles?: (progress: SharedValue<number>) => AnimatedStylesType // -> must be a worklet / Reanimated type declarations\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"customvariants"},(0,r.kt)("inlineCode",{parentName:"h3"},"CustomVariants")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"{\n    key: {\n        component: React.FC\n    },\n    [...]\n}\n\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gestureconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"GestureConfig")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"direction: 'y' | 'x' | 'full' | 'none'\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"styleprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"StyleProps")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"titleSize: number // default 20\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"titleColor: string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"descriptionSize: number // default 12\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"descriptionColor: string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"bgColor: string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"borderType: 'border' | 'accent' | 'no-border' // default 'accent',\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"borderRadius: number // default 25\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"accentColor: string\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"borderWidth: number // default 3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"multiline: number // default 5\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"defaultIconType: 'color' | 'monochromatic' | 'no-icon' // default 'color'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"leftIconSource: ImageSourcePropType // -> React Native type declaration\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"imageStyle: ImageStyle // -> React Native type declaration\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"notificationconfigparams"},(0,r.kt)("inlineCode",{parentName:"h3"},"NotificationConfigParams")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"config?: {\n    duration?: number // default 3000\n    notificationPosition: NotificationPosition // default 'top'\n    animationConfig: CustomAnimationConfig\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"notificationparams"},(0,r.kt)("inlineCode",{parentName:"h3"},"NotificationParams")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"params: {\n    title?: string\n    description?: string\n    onPress?: () => void\n    style?: StyleProps\n    hideCloseButton?: boolean // default false\n    customID?: string\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"When used with a custom notification, there is a little difference in the 'title' and 'description'")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// when calling custom component:\nparams: {\n    customTitle?: string\n    customDescription?: string\n    [...]\n    // rest is the same\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"notificationposition"},(0,r.kt)("inlineCode",{parentName:"h3"},"NotificationPosition")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},";'top' | 'center' | 'top'\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"modalnotificationprovider"},(0,r.kt)("inlineCode",{parentName:"h3"},"ModalNotificationProvider")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"ModalNotificationsProvider: React.FC<React.PropsWithChildren<{ notificationTopPosition?: number }>>\n")),(0,r.kt)("hr",null))}u.isMDXComponent=!0}}]);